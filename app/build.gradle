plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

def packageName = "jp.dip.muracoro.comittonx"
def applicationName = "ComittoNxX"
def versionMajor = 1
def versionMinor = 2
def versionPatch = 0

// 画像フォーマットサポート設定
def WITH_JPEG = "ON"
def WITH_PNG = "ON"
def WITH_GIF = "ON"
def WITH_WEBP = "ON"
def WITH_AVIF = "ON"
def WITH_HEIF = "ON"
def WITH_JXL = "OFF"

// アプリに署名するため以下のファイルを作成して signingConfig の設定を記述してください
apply from:'../signingConfigs/release.gradle', to: android
android {

    namespace packageName
    compileSdk 35

    // C言語の書式でビルドエラーが発生する場合はndkバージョンを24まで下げること
    ndkVersion "27.0.12077973"
    //ndkVersion "24.0.8215888"

    defaultConfig {
        applicationId packageName
        minSdk 21
        // targetSdk11以降でSMBまわりでNetworkOnMainThreadExceptionエラー発生の可能性
        // targetSdk29はrequestLegacyExternalStorageをセットできる
        targetSdk 29

        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        consumerProguardFiles "consumer-rules.pro"

        ndk {
            externalNativeBuild {
                cmake {
                    cppFlags += ''
                }
            }
        }

        // BuildConfig.java に値を定義する
        buildConfigField("String", "WITH_JPEG", "\"" + WITH_JPEG + "\"")
        buildConfigField("String", "WITH_PNG", "\"" + WITH_PNG + "\"")
        buildConfigField("String", "WITH_GIF", "\"" + WITH_GIF + "\"")
        buildConfigField("String", "WITH_WEBP", "\"" + WITH_WEBP + "\"")
        buildConfigField("String", "WITH_AVIF", "\"" + WITH_AVIF + "\"")
        buildConfigField("String", "WITH_HEIF", "\"" + WITH_HEIF + "\"")
        buildConfigField("String", "WITH_JXL", "\"" + WITH_JXL + "\"")
        // ビルド日時を 参照できるようにする
        buildConfigField("long", "BUILD_DATE", System.currentTimeMillis().toString())

        // CmakeLists.txt にオプションを定義する
        externalNativeBuild {
            cmake {
                arguments \
                    "-DWITH_JPEG=" + WITH_JPEG,\
                    "-DWITH_PNG=" + WITH_PNG,\
                    "-DWITH_GIF=" + WITH_GIF,\
                    "-DWITH_WEBP=" + WITH_WEBP,\
                    "-DWITH_AVIF=" + WITH_AVIF,\
                    "-DWITH_HEIF=" +WITH_HEIF,\
                    "-DWITH_JXL=" + WITH_JXL
            }
        }

        signingConfig signingConfigs.release
    }
    applicationVariants.all { variant ->
        variant.resValue 'string', 'application_id', variant.applicationId
        variant.outputs.all {
            outputFileName = "${applicationName}_${versionName}.apk"
        }
    }
    buildTypes {
        release {
            ndk {
                abiFilters "arm64-v8a", "armeabi-v7a", "x86_64", "x86"
            }
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            ndk {
                abiFilters "arm64-v8a"
            }
            applicationIdSuffix ".debug"
            versionNameSuffix "debug"
            debuggable true
            minifyEnabled false
        }
    }
    externalNativeBuild {
        cmake {
            path file('src/main/jni/CMakeLists.txt')
            version '3.22.1'
        }
    }
    productFlavors {
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }
    buildFeatures {
        buildConfig true
    }
    lint {
        abortOnError false
        checkReleaseBuilds false
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.appcompat:appcompat:1.7.0'

    // SMB接続用ライブラリ(SMB1, SMB202, SMB210, SMB300, SMB302, SMB311に対応)
    implementation 'org.codelibs:jcifs:2.1.38'
    implementation 'androidx.compose.ui:ui-graphics-android:1.6.8'
}
